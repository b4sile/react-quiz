{"version":3,"sources":["components/button/style.module.css","pages/style.module.css","components/button/index.tsx","utils/index.ts","api/index.ts","redux/thunks/gameThunks.ts","redux/slices/gameSlice.ts","redux/index.ts","hooks/useGame.ts","pages/Quiz.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","children","className","rest","cn","s","btn","shuffle","arr","i","length","j","Math","floor","random","compareArrays","a","b","uniqueValues","Array","from","Set","v","filter","e","api","getQuestions","fetch","response","json","data","response_code","results","forEach","res","category","decode","correct_answer","map","ans","incorrect_answers","question","correct_answers","variants","fetchQuestions","createAsyncThunk","questions","Error","initialState","error","undefined","isLoading","isGameRun","currentQuestionInd","answers","createSlice","name","reducers","setAnswer","state","payload","answer","type","indexOf","push","setNextQuestion","setGameOver","all","count","correct","easy","medium","hard","isCorrectAnswer","difficulty","extraReducers","builder","addCase","fulfilled","pending","rejected","action","message","actions","reducer","selectGameState","game","store","configureStore","gameReducer","useAppSelector","useSelector","useGame","dispatch","useDispatch","handleStartGame","handleNextStep","preventDefault","isLastQuestion","onChange","target","value","Quiz","container","Object","entries","key","percent","toFixed","res_item","res_text","toUpperCase","bg_line","line","style","width","onClick","text","inputType","tags","onSubmit","form","variant","ind","Fragment","id","defaultChecked","includes","input","label","htmlFor","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3483f8c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"style_btn__1i9zR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3hSNO\",\"question\":\"style_question__1Xy8a\",\"tags\":\"style_tags__NVVsM\",\"category\":\"style_category__2b9bQ\",\"difficulty\":\"style_difficulty__QdqRC\",\"easy\":\"style_easy__lVcCW\",\"medium\":\"style_medium__21WFL\",\"hard\":\"style_hard__3S71o\",\"form\":\"style_form__3w4ma\",\"label\":\"style_label__3Y_ye\",\"input\":\"style_input__1oMDb\",\"results\":\"style_results__1Qiz1\",\"res_item\":\"style_res_item__BWSIb\",\"line\":\"style_line__2_2JX\",\"res_text\":\"style_res_text__2HHpN\",\"bg_line\":\"style_bg_line__pssm8\",\"btn\":\"style_btn__3OvAl\"};","import React from 'react';\nimport cn from 'classnames';\nimport s from './style.module.css';\n\ninterface IButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\nexport const Button = ({ children, className, ...rest }: IButtonProps) => {\n  return (\n    <button className={cn(s.btn, className)} {...rest}>\n      {children}\n    </button>\n  );\n};\n","export const shuffle = <T>(arr: T[]) => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\n\nexport const compareArrays = <T>(a: T[], b: T[]) => {\n  if (a.length !== b.length) return false;\n  const uniqueValues = Array.from(new Set([...a, ...b]));\n  for (const v of uniqueValues) {\n    const aCount = a.filter((e) => e === v).length;\n    const bCount = b.filter((e) => e === v).length;\n    if (aCount !== bCount) return false;\n  }\n  return true;\n};\n","import { IQuestion, IResponse } from '../types';\nimport { shuffle } from '../utils';\nimport { decode } from 'html-entities';\n\nexport const api = {\n  getQuestions: async (): Promise<IQuestion[] | null> => {\n    const response = await fetch('https://opentdb.com/api.php?amount=10');\n    const data = (await response.json()) as IResponse;\n    if (data.response_code === 0) {\n      data.results.forEach((res) => {\n        res.category = decode(res.category);\n        if (typeof res.correct_answer === 'string')\n          res.correct_answer = decode(res.correct_answer);\n        else res.correct_answer = res.correct_answer.map((ans) => decode(ans));\n        res.incorrect_answers = res.incorrect_answers.map((ans) => decode(ans));\n        res.question = decode(res.question);\n      });\n\n      return data.results.map((res) => {\n        let correct_answers: string[];\n        if (typeof res.correct_answer === 'string')\n          correct_answers = [res.correct_answer];\n        else correct_answers = res.correct_answer;\n        return {\n          ...res,\n          variants: shuffle<string>([\n            ...correct_answers,\n            ...res.incorrect_answers,\n          ]),\n        };\n      });\n    }\n    return null;\n  },\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { api } from '../../api';\n\nexport const fetchQuestions = createAsyncThunk(\n  'game/fetchQuestions',\n  async () => {\n    const questions = await api.getQuestions();\n    if (questions) {\n      return questions;\n    } else {\n      throw new Error('Invalid response');\n    }\n  }\n);\n","import { IQuestion, IResults } from './../../types';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '..';\nimport { fetchQuestions } from '../thunks/gameThunks';\nimport { compareArrays } from '../../utils';\n\ninterface GameState {\n  questions: IQuestion[];\n  error: string | undefined;\n  isLoading: boolean;\n  isGameRun: boolean;\n  currentQuestionInd: number;\n  answers: Array<Array<string>>;\n  results: null | IResults;\n}\n\nconst initialState: GameState = {\n  questions: [],\n  error: undefined,\n  isLoading: false,\n  isGameRun: false,\n  currentQuestionInd: 0,\n  answers: [],\n  results: null,\n};\n\nconst { actions, reducer } = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    setAnswer: (state, { payload }: PayloadAction<string>) => {\n      const answer = state.answers[state.currentQuestionInd];\n      if (\n        state.questions[state.currentQuestionInd].type === 'boolean' ||\n        !answer.length\n      )\n        state.answers[state.currentQuestionInd] = [payload];\n      else {\n        const ind = answer.indexOf(payload);\n        if (ind === -1) {\n          answer.push(payload);\n        } else {\n          state.answers[state.currentQuestionInd] = answer.filter(\n            (ans) => ans !== payload\n          );\n        }\n      }\n    },\n    setNextQuestion: (state) => {\n      state.currentQuestionInd++;\n    },\n    setGameOver: (state) => {\n      state.isGameRun = false;\n      state.currentQuestionInd = 0;\n      state.results = {\n        all: { count: state.questions.length, correct: 0 },\n        easy: { correct: 0, count: 0 },\n        medium: { count: 0, correct: 0 },\n        hard: { count: 0, correct: 0 },\n      };\n\n      for (let i = 0; i < state.questions.length; i++) {\n        const question = state.questions[i];\n        let correct_answers: string[];\n        if (typeof question.correct_answer === 'string')\n          correct_answers = [question.correct_answer];\n        else correct_answers = question.correct_answer;\n        const isCorrectAnswer = compareArrays<string>(\n          correct_answers,\n          state.answers[i]\n        );\n        state.results[question.difficulty].count++;\n        if (isCorrectAnswer) {\n          state.results.all.correct++;\n          state.results[question.difficulty].correct++;\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchQuestions.fulfilled, (state, { payload }) => {\n      state.answers = Array.from({ length: payload.length }, () => []);\n      state.isLoading = false;\n      state.isGameRun = true;\n      state.results = null;\n      state.questions = payload;\n    });\n    builder.addCase(fetchQuestions.pending, (state) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchQuestions.rejected, (state, action) => {\n      state.error = action.error.message;\n      state.isLoading = false;\n    });\n  },\n});\n\nexport const { setNextQuestion, setGameOver, setAnswer } = actions;\n\nexport default reducer;\n\nexport const selectGameState = ({ game }: RootState) => game;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport gameReducer from './slices/gameSlice';\n\nexport const store = configureStore({\n  reducer: {\n    game: gameReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../redux';\nimport {\n  selectGameState,\n  setGameOver,\n  setAnswer,\n  setNextQuestion,\n} from '../redux/slices/gameSlice';\nimport { fetchQuestions } from '../redux/thunks/gameThunks';\n\nexport const useGame = () => {\n  const {\n    error,\n    questions,\n    isLoading,\n    isGameRun,\n    currentQuestionInd,\n    answers,\n    results,\n  } = useAppSelector(selectGameState);\n  const dispatch = useAppDispatch();\n  const answer = answers[currentQuestionInd];\n\n  const handleStartGame = () => {\n    dispatch(fetchQuestions());\n  };\n\n  const handleNextStep = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (currentQuestionInd < questions.length - 1) {\n      dispatch(setNextQuestion());\n    } else {\n      dispatch(setGameOver());\n    }\n  };\n\n  const question = questions[currentQuestionInd];\n  const isLastQuestion = questions.length - 1 === currentQuestionInd;\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setAnswer(e.target.value));\n  };\n\n  return {\n    question,\n    error,\n    isLoading,\n    handleStartGame,\n    isGameRun,\n    handleNextStep,\n    isLastQuestion,\n    onChange,\n    answer,\n    results,\n  };\n};\n","import React from 'react';\nimport { Button } from '../components/button';\nimport { useGame } from '../hooks/useGame';\nimport cn from 'classnames';\nimport s from './style.module.css';\n\nexport const Quiz = () => {\n  const {\n    question,\n    error,\n    isLoading,\n    handleStartGame,\n    isGameRun,\n    handleNextStep,\n    isLastQuestion,\n    onChange,\n    answer,\n    results,\n  } = useGame();\n\n  if (isLoading) return <p>Loading...</p>;\n\n  if (error) return <p>{error}</p>;\n\n  if (results) {\n    return (\n      <div className={s.container}>\n        <div className={s.results}>\n          {Object.entries(results).map(([key, res]) => {\n            const percent = `${\n              res.count ? ((res.correct * 100) / res.count).toFixed(0) : 0\n            }%`;\n\n            return (\n              <div key={key} className={s.res_item}>\n                <p className={s.res_text}>\n                  {key.toUpperCase()} questions: {res.count} Correct answers:{' '}\n                  {res.correct} ({percent})\n                </p>\n                <div className={s.bg_line}>\n                  <div className={s.line} style={{ width: percent }}></div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <Button className={s.btn} onClick={handleStartGame}>\n          Start over\n        </Button>\n      </div>\n    );\n  }\n\n  if (!isGameRun) return <Button onClick={handleStartGame}>start</Button>;\n\n  const { category, difficulty, variants, type, question: text } = question;\n  const inputType = type === 'boolean' ? 'radio' : 'checkbox';\n\n  return (\n    <div className={s.container}>\n      <h2 className={s.question}>{text}</h2>\n      <div className={s.tags}>\n        <span className={s.category}>Category - {category}</span>\n        <span\n          className={cn(s.difficulty, {\n            [s.easy]: difficulty === 'easy',\n            [s.medium]: difficulty === 'medium',\n            [s.hard]: difficulty === 'hard',\n          })}\n        >\n          {difficulty}\n        </span>\n      </div>\n      <form onSubmit={handleNextStep} className={s.form}>\n        {variants.map((variant, ind) => (\n          <React.Fragment key={variant}>\n            <input\n              id={`checkbox-${ind}`}\n              defaultChecked={answer.includes(variant)}\n              className={s.input}\n              type={inputType}\n              name=\"answer\"\n              onChange={onChange}\n              value={variant}\n            />\n            <label className={s.label} htmlFor={`checkbox-${ind}`}>\n              {variant}\n            </label>\n          </React.Fragment>\n        ))}\n        <Button className={s.btn} type=\"submit\" disabled={!answer.length}>\n          {!isLastQuestion ? 'Next question' : 'Finish game'}\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Quiz } from './pages/Quiz';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Quiz />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}